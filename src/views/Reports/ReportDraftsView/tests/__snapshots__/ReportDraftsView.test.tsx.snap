// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ReportDraftsView matches snapshot 1`] = `
<RNCSafeAreaView
  edges={
    Array [
      "bottom",
      "left",
      "right",
      "top",
    ]
  }
  style={
    Object {
      "backgroundColor": "#FFFFFF",
      "flex": 1,
    }
  }
>
  <View>
    <Text
      style={
        Object {
          "color": "#000000",
          "fontSize": 12,
          "fontWeight": "400",
          "lineHeight": 14,
          "marginLeft": "auto",
          "marginRight": 16,
          "marginTop": 0,
        }
      }
    >
      Date updated
    </Text>
    <View
      style={
        Object {
          "backgroundColor": "#DDDDDD",
          "height": 1,
          "marginTop": 13,
        }
      }
    />
    <RCTScrollView
      data={
        Array [
          Object {
            "default_priority": 0,
            "icon_svg": "",
            "id": "1",
            "title": "Reptile",
            "updated_at": "1667529163154",
          },
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "marginBottom": 30,
        }
      }
      viewabilityConfigCallbackPairs={Array []}
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View>
            <View
              collapsable={false}
              forwardedRef={[Function]}
              handlerTag={1}
              handlerType="PanGestureHandler"
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onLayout={[Function]}
              style={
                Object {
                  "overflow": "hidden",
                }
              }
            >
              <View
                collapsable={false}
                style={
                  Object {
                    "backgroundColor": "#D0031B",
                    "bottom": 0,
                    "flexDirection": "row-reverse",
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                    "transform": Array [
                      Object {
                        "translateX": -10000,
                      },
                    ],
                  }
                }
              >
                <View
                  collapsable={false}
                  row={true}
                  style={
                    Object {
                      "flexDirection": "row",
                      "transform": Array [
                        Object {
                          "translateX": 0,
                        },
                      ],
                    }
                  }
                >
                  <RNGestureHandlerButton
                    activeOpacity={0.105}
                    collapsable={false}
                    delayLongPress={600}
                    handlerTag={2}
                    handlerType="NativeViewGestureHandler"
                    onActiveStateChange={[Function]}
                    onGestureEvent={[Function]}
                    onGestureHandlerEvent={[Function]}
                    onGestureHandlerStateChange={[Function]}
                    onHandlerStateChange={[Function]}
                    onPress={[Function]}
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#D0031B",
                        "justifyContent": "center",
                        "minWidth": undefined,
                        "paddingHorizontal": 12,
                        "width": undefined,
                      }
                    }
                    underlayColor="black"
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "backgroundColor": "black",
                          "borderBottomLeftRadius": undefined,
                          "borderBottomRightRadius": undefined,
                          "borderRadius": undefined,
                          "borderTopLeftRadius": undefined,
                          "borderTopRightRadius": undefined,
                          "bottom": 0,
                          "left": 0,
                          "opacity": 0,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        }
                      }
                    />
                    <Image
                      collapsable={false}
                      source={
                        Object {
                          "testUri": "../../../assets/icons/ic-trash.png",
                        }
                      }
                      style={
                        Object {
                          "height": 24,
                          "marginHorizontal": 10,
                          "opacity": 0.2,
                          "tintColor": "#FFFFFF",
                          "transform": Array [
                            Object {
                              "scale": 0.2,
                            },
                          ],
                          "width": 24,
                        }
                      }
                    />
                    <Text
                      accessibilityElementsHidden={true}
                      accessible={false}
                      collapsable={false}
                      importantForAccessibility="no-hide-descendants"
                      style={
                        Object {
                          "color": "#FFFFFF",
                          "fontSize": 12,
                          "opacity": 0.2,
                          "transform": Array [
                            Object {
                              "scale": 0.2,
                            },
                          ],
                        }
                      }
                    >
                      Delete
                    </Text>
                  </RNGestureHandlerButton>
                </View>
                <View
                  onLayout={[Function]}
                />
              </View>
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={3}
                handlerType="TapGestureHandler"
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "transform": Array [
                      Object {
                        "translateX": -0,
                      },
                    ],
                  }
                }
              >
                <View
                  accessibilityActions={
                    Array [
                      Object {
                        "label": "Delete",
                        "name": "Delete",
                      },
                    ]
                  }
                  accessible={true}
                  onAccessibilityAction={[Function]}
                  style={
                    Array [
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      Object {},
                      Object {},
                      Object {},
                      undefined,
                    ]
                  }
                >
                  <View
                    accessible={true}
                    collapsable={false}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#FFFFFF",
                          "flex": 1,
                          "flexDirection": "row",
                          "height": 58,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                        }
                      }
                    >
                      <View>
                        <RNSVGSvgView
                          bbHeight="40"
                          bbWidth="40"
                          focusable={false}
                          height="40"
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderWidth": 0,
                              },
                              Object {
                                "flex": 0,
                                "height": 40,
                                "width": 40,
                              },
                            ]
                          }
                          width="40"
                        >
                          <RNSVGGroup>
                            <RNSVGGroup>
                              <RNSVGGroup>
                                <RNSVGGroup
                                  fill={4294967295}
                                  opacity={0.8}
                                  propList={
                                    Array [
                                      "fill",
                                    ]
                                  }
                                >
                                  <RNSVGCircle
                                    cx="7.5"
                                    cy="7.5"
                                    r="6.75"
                                  />
                                  <RNSVGPath
                                    d="M7.5 1.5a6 6 0 1 1-6 6 6 6 0 0 1 6-6m0-1.5A7.5 7.5 0 1 0 15 7.5 7.508 7.508 0 0 0 7.5 0Z"
                                  />
                                </RNSVGGroup>
                                <RNSVGCircle
                                  cx={20}
                                  cy={20}
                                  fill={4284704362}
                                  propList={
                                    Array [
                                      "fill",
                                    ]
                                  }
                                  r={20}
                                />
                              </RNSVGGroup>
                            </RNSVGGroup>
                          </RNSVGGroup>
                        </RNSVGSvgView>
                      </View>
                      <Text
                        numberOfLines={2}
                        style={
                          Object {
                            "fontSize": 16,
                            "fontWeight": "500",
                            "lineHeight": 18,
                            "marginLeft": 12,
                            "textAlignVertical": "center",
                            "width": "54%",
                          }
                        }
                      >
                        Reptile
                      </Text>
                      <Text
                        style={
                          Object {
                            "fontSize": 12,
                            "fontWeight": "400",
                            "lineHeight": 14,
                            "marginLeft": "auto",
                          }
                        }
                      >
                        2 Jul '71 15:15
                      </Text>
                    </View>
                    <View
                      style={
                        Object {
                          "backgroundColor": "#DDDDDD",
                          "height": 1,
                          "margingTop": 10,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaView>
`;
