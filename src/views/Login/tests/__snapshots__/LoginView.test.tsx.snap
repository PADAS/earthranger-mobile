// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LoginView matches snapshot 1`] = `
Array [
  <View
    accessible={false}
    focusable={true}
    onClick={[Function]}
    onLayout={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "paddingBottom": 0,
        },
      ]
    }
  >
    <RNCSafeAreaView
      edges={
        Array [
          "bottom",
          "left",
          "right",
          "top",
        ]
      }
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "flex": 1,
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
            "justifyContent": "flex-end",
            "marginEnd": 18,
            "marginStart": 18,
          }
        }
      >
        <Image
          source={
            Object {
              "testUri": "../../../assets/icons/ic-login-logo.png",
            }
          }
          style={
            Object {
              "alignSelf": "center",
              "height": 85,
              "marginBottom": 10,
              "marginTop": 21,
              "resizeMode": "contain",
              "width": 180,
            }
          }
        />
        <View>
          <Text
            style={
              Object {
                "color": "#888B8D",
                "fontSize": 12,
                "fontWeight": "500",
                "marginTop": 22,
              }
            }
          >
            SITE NAME *
          </Text>
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <TextInput
              accessibilityLabel="Site Name"
              autoCapitalize="none"
              autoCorrect={false}
              blurOnSubmit={false}
              onChangeText={[Function]}
              onFocus={[Function]}
              onSubmitEditing={[Function]}
              returnKeyType="next"
              style={
                Array [
                  Object {
                    "borderColor": "#63666A",
                    "borderRadius": 3,
                    "borderWidth": 0.5,
                    "height": 40,
                    "marginTop": 5,
                    "paddingStart": 8,
                    "width": "100%",
                  },
                  Object {
                    "flex": 1,
                    "marginEnd": 3,
                    "paddingStart": 8,
                  },
                  null,
                ]
              }
              testID="LoginView-SiteName"
              value=""
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "#888B8D",
                    "fontSize": 12,
                    "fontWeight": "500",
                    "marginTop": 22,
                  },
                  Object {
                    "flex": 0,
                    "fontSize": 16,
                    "marginTop": 12,
                  },
                ]
              }
            >
              .pamdas.org
            </Text>
          </View>
        </View>
        <Text
          style={
            Object {
              "color": "#888B8D",
              "fontSize": 12,
              "fontWeight": "500",
              "marginTop": 22,
            }
          }
        >
          USER NAME *
        </Text>
        <TextInput
          accessibilityLabel="User Name"
          autoCapitalize="none"
          autoCorrect={false}
          blurOnSubmit={false}
          onChangeText={[Function]}
          onSubmitEditing={[Function]}
          returnKeyType="next"
          style={
            Array [
              Object {
                "borderColor": "#63666A",
                "borderRadius": 3,
                "borderWidth": 0.5,
                "height": 40,
                "marginTop": 5,
                "paddingStart": 8,
                "width": "100%",
              },
              null,
            ]
          }
          testID="LoginView-Username"
          value=""
        />
        <View>
          <Text
            style={
              Object {
                "color": "#888B8D",
                "fontSize": 12,
                "fontWeight": "500",
                "marginTop": 22,
              }
            }
          >
            PASSWORD *
          </Text>
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <TextInput
              accessibilityLabel="Password"
              autoCapitalize="none"
              autoCorrect={false}
              blurOnSubmit={false}
              onChangeText={[Function]}
              onFocus={[Function]}
              onSubmitEditing={[Function]}
              returnKeyType="next"
              secureTextEntry={true}
              style={
                Array [
                  Object {
                    "borderColor": "#63666A",
                    "borderRadius": 3,
                    "borderWidth": 0.5,
                    "height": 40,
                    "marginTop": 5,
                    "paddingStart": 8,
                    "width": "100%",
                  },
                  Object {
                    "paddingEnd": 55,
                    "paddingStart": 8,
                  },
                  null,
                ]
              }
              testID="LoginView-Password"
              value=""
            />
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              testID="LoginView-Password-Button"
            >
              <View
                style={
                  Array [
                    Object {
                      "position": "absolute",
                      "resizeMode": "contain",
                    },
                    Object {
                      "height": 15,
                      "right": 10,
                      "top": 17,
                      "width": 22,
                    },
                  ]
                }
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight="50"
                  bbWidth="50"
                  fill="#63666A"
                  focusable={false}
                  height="50"
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "flex": 0,
                        "height": 50,
                        "width": 50,
                      },
                    ]
                  }
                  vbHeight={48}
                  vbWidth={48}
                  width="50"
                >
                  <RNSVGGroup
                    fill={4284704362}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                  >
                    <RNSVGPath
                      d="M11 4C13.76 4 16 6.24 16 9C16 9.65 15.87 10.26 15.64 10.83L18.56 13.75C20.07 12.49 21.26 10.86 21.99 9C20.26 4.61 15.99 1.5 10.99 1.5C9.59 1.5 8.25 1.75 7.01 2.2L9.17 4.36C9.74 4.13 10.35 4 11 4ZM1 1.27L3.28 3.55L3.74 4.01C2.08 5.3 0.78 7.02 0 9C1.73 13.39 6 16.5 11 16.5C12.55 16.5 14.03 16.2 15.38 15.66L15.8 16.08L18.73 19L20 17.73L2.27 0L1 1.27ZM6.53 6.8L8.08 8.35C8.03 8.56 8 8.78 8 9C8 10.66 9.34 12 11 12C11.22 12 11.44 11.97 11.65 11.92L13.2 13.47C12.53 13.8 11.79 14 11 14C8.24 14 6 11.76 6 9C6 8.21 6.2 7.47 6.53 6.8ZM10.84 6.02L13.99 9.17L14.01 9.01C14.01 7.35 12.67 6.01 11.01 6.01L10.84 6.02Z"
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
              Object {
                "marginTop": 23,
              },
            ]
          }
        >
          <View
            accessibilityRole="checkbox"
            accessibilityState={
              Object {
                "checked": false,
                "disabled": false,
              }
            }
            accessible={true}
            pointerEvents="auto"
          >
            <RNCCheckbox
              accessibilityLabel="Remember Me"
              boxType="square"
              forwardedRef={null}
              onCheckColor="#FFFFFF"
              onFillColor="#0056C7"
              onValueChange={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "height": 32,
                    "width": 32,
                  },
                  Object {
                    "alignItems": "center",
                    "alignSelf": "center",
                    "height": 20,
                    "width": 20,
                  },
                ]
              }
              testID="LoginView-RememberMe"
              tintColor="#888B8D"
              tintColors={
                Object {
                  "true": "#0056C7",
                }
              }
              value={false}
            />
          </View>
          <Text
            style={
              Object {
                "color": "#000000",
                "fontSize": 16,
                "marginStart": 14,
              }
            }
          >
            Remember me
          </Text>
        </View>
        <View
          style={
            Object {
              "flex": 1,
              "justifyContent": "flex-end",
              "marginBottom": 34,
              "marginTop": "16%",
            }
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": true,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0056C7",
                  "borderRadius": 5,
                  "height": 48,
                  "justifyContent": "center",
                  "width": "100%",
                },
                Object {
                  "opacity": 0.5,
                },
              ]
            }
            testID="LoginView-LoginButton"
          >
            <Text
              accessibilityLabel="Log In"
              style={
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontWeight": "bold",
                  "letterSpacing": 0.25,
                  "lineHeight": 21,
                }
              }
            >
              Log In
            </Text>
          </View>
        </View>
      </View>
      <Modal
        animationType="fade"
        hardwareAccelerated={false}
        transparent={true}
        visible=""
      />
    </RNCSafeAreaView>
  </View>,
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    transparent={true}
    visible={false}
  />,
]
`;
